!function(){"use strict";class t{constructor(t,e,s){let{name:n,link:i}=t;this._name=n,this._link=i,this._cardSelector=e,this._handlePreviewImage=s,this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._trashButton=this._cardElement.querySelector(".card__trash-button"),this._setEventListeners()}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handlePreviewImage(this._name,this._link)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._trashButton.addEventListener("click",(()=>{this._handleTrashButton()}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleTrashButton(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}}var e=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((t=>t.validity.valid))}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((t=>{this._hideInputError(t)}))}_setEventListeners(){this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this.toggleButtonState(t)}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}};class s{constructor(t){this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(t=>{(t.target.classList.contains("modal")||t.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(t,e){super(t),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputItems=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){const t={};return this._inputItems.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}close(){this._popupForm.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-button"),o=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__title"),l=document.querySelector(".profile__description"),c=document.querySelector("#profile-name-input"),u=document.querySelector("#profile-description-input"),d=document.forms["profile-form"],_=document.forms["card-form"];r.addEventListener("click",(()=>{!function(){const t=E.getUserInfo();c.value=t.name,u.value=t.description}(),v.open(),f.resetValidation()}));const m=e=>{const s=new t(e,"#card-template",S).getView();h.addItem(s)},h=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:m},".cards__card-list");h.renderItems();const p=new n("#add-card-modal",(function(t){m(t)}));p.setEventListeners();const E=new class{constructor(t,e){this.name=t,this.description=e}getUserInfo(){return{name:this.name.textContent,description:this.description.textContent}}setUserInfo(t,e){this.name.textContent=t,this.description.textContent=e}}(a,l),v=new n("#profile-edit-modal",(function(t){E.setUserInfo(t.name,t.description),v.close()}));v.setEventListeners();const f=new e(i,d),g=new e(i,_);f.enableValidation(),g.enableValidation(),o.addEventListener("click",(()=>{g.resetValidation(),p.open()}));const L=new class extends s{constructor(t){super(t),this._cardImage=this._popupElement.querySelector("#preview-image-of-modal"),this._cardTitle=this._popupElement.querySelector(".modal__title-preview")}open(t,e){this._cardImage.src=e,this._cardImage.alt=t,this._cardTitle.textContent=t,super.open()}}("#preview-image");function S(t,e){L.open(t,e)}L.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,